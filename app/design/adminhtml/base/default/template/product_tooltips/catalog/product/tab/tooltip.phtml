<?php
/**
 * Created by nick
 * Project magento1.dev
 * Date: 3/20/17
 * Time: 12:48 PM
 */
?>
<div class="entity-edit" id="matage-options-panel">
    <div class="entry-edit-head">
        <h4 class="icon-head head-edit-form fieldset-legend"><?php echo $this->__('Manage Options (values of your tooltips)') ?></h4>
    </div>
    <div class="box">
        <div class="hor-scroll">
            <table class="dynamic-grid" cellspacing="0"  cellpadding="0">
                <tr id="tooltip-options-table">
                    <?php foreach ($this->getStores() as $_store): ?>
                        <th><?php echo $_store->getName() . ' ' .$this->__('Label')?></th>
<!--                        <th>--><?php //echo $_store->getName() . ' ' .$this->__('Description')?><!--</th>-->
                    <?php endforeach; ?>
                    <th><?php echo $this->__('Image') ?></th>
                    <th><?php echo $this->__('Position') ?></th>
                    <th><?php echo $this->__('Selected') ?></th>
                <tr class="no-display template" id="row-template">
                    <?php foreach ($this->getStores() as $_store): ?>
                        <td><input name="option[value][{{id}}][<?php echo $_store->getId() ?>]" value="{{store<?php echo $_store->getId() ?>}}" class="input-text<?php if($_store->getId()==0): ?> required-option<?php endif; ?>" type="text" <?php if ($this->getReadOnly()):?> disabled="disabled"<?php endif;?>/></td>
                    <?php endforeach; ?>
                    <td>
                        <img src="{{image}}" height="72" width="72">
                    </td>
                    <td class="a-center"><input class="input-text" type="text" name="option[order][{{id}}]" value="{{sort_order}}" <?php if ($this->getReadOnly()):?> disabled="disabled"<?php endif;?>/></td>
                    <td><input class="input-radio" type="radio" name="default[]" value="{{id}}" <?php if ($this->getReadOnly()):?> disabled="disabled"<?php endif;?>/></td>
                    <td class="a-left">
                        <input type="hidden" class="delete-flag" name="option[delete][{{id}}]" value="" />
                        <?php if (!$this->getReadOnly()):?>
                            <?php echo $this->getDeleteButtonHtml() ?>
                        <?php endif;?>
                    </td>
                </tr>
            </table>
        </div>
        <input type="hidden" id="option-count-check" value="" />
    </div>
</div>
<script type="text/javascript">
    //<![CDATA[
    var tooltipDefaultInputType = 'checkbox';

    // IE removes quotes from element.innerHTML whenever it thinks they're not needed, which breaks html.
    var tooltipTemplateText =
        '<tr class="option-row">'+
        <?php foreach ($this->getStores() as $_store): ?>
        '<td><input name="option[value][{{id}}][<?php echo $_store->getId() ?>]" value="{{store<?php echo $_store->getId() ?>}}" class="input-text<?php if($_store->getId()==0): ?> required-option<?php endif; ?>" type="text" <?php if ($this->getReadOnly()):?> disabled="disabled"<?php endif;?>/><\/td>'+
        <?php endforeach; ?>
        '<td><img src="{{image}}" height="72" width="72"><\/td>'+
        '<td><input class="input-text" type="text" name="option[order][{{id}}]" value="{{sort_order}}" <?php if ($this->getReadOnly()):?> disabled="disabled"<?php endif;?>/><\/td>'+
        '<td class="a-center"><input class="input-radio" type="{{intype}}" name="default[]" value="{{id}}" {{checked}} <?php if ($this->getReadOnly()):?> disabled="disabled"<?php endif;?>/><\/td>'+
        '<\/td>'+
        '<\/tr>';

    var tooltipOption = {
        table : $('tooltip-options-table'),
        templateSyntax : /(^|.|\r|\n)({{(\w+)}})/,
        tooltipTemplateText : tooltipTemplateText,
        itemCount : 0,
        totalItems : 0,
        isReadOnly: <?php echo (int)$this->getReadOnly(); ?>,
        add : function(data) {
            this.template = new Template(this.tooltipTemplateText, this.templateSyntax);
            var isNewOption = false;
            if(!data.id){
                data = {};
                data.id  = 'option_'+this.itemCount;
                isNewOption = true;
            }
            if (!data.intype)
                data.intype = tooltipDefaultInputType;
            Element.insert(this.table, {after: this.template.evaluate(data)});
            if (isNewOption && !this.isReadOnly) {
                this.enableNewOptionDeleteButton(data.id);
            }
            this.bindRemoveButtons();
            this.itemCount++;
            this.totalItems++;
            this.updateItemsCountField();
        },
        remove : function(event){
            var element = $(Event.findElement(event, 'tr')); // !!! Button already
            // have table parent in safari
            // Safari workaround
            element.ancestors().each(function(parentItem){
                if (parentItem.hasClassName('option-row')) {
                    element = parentItem;
                    throw $break;
                } else if (parentItem.hasClassName('box')) {
                    throw $break;
                }
            });


            if(element){
                var elementFlags = element.getElementsByClassName('delete-flag');
                if(elementFlags[0]){
                    elementFlags[0].value=1;
                }

                element.addClassName('no-display');
                element.addClassName('template');
                element.hide();
                this.totalItems--;
                this.updateItemsCountField();
            }
        },
        updateItemsCountField: function() {
            if (this.totalItems > 0) {
                $('option-count-check').value = '1';
            } else {
                $('option-count-check').value = '';
            }
        },
        enableNewOptionDeleteButton: function(id) {
            $$('#delete_button_container_' + id + ' button').each(function(button) {
                button.enable();
                button.removeClassName('disabled');
            });
        },
        bindRemoveButtons : function(){
            var buttons = $$('.delete-option');
            for(var i=0;i<buttons.length;i++){
                if(!$(buttons[i]).binded){
                    $(buttons[i]).binded = true;
                    Event.observe(buttons[i], 'click', this.remove.bind(this));
                }
            }
        }

    };
    if($('row-template')){
        $('row-template').remove();
    }
    tooltipOption.bindRemoveButtons();

    if($('add_new_option_button')){
        Event.observe('add_new_option_button', 'click', tooltipOption.add.bind(tooltipOption));
    }
    Validation.addAllThese([
        ['required-option', '<?php echo $this->jsQuoteEscape($this->__('Failed')) ?>', function(v) {
            return !Validation.get('IsEmpty').test(v);
        }]]);
    Validation.addAllThese([
        ['required-options-count', '<?php echo $this->jsQuoteEscape($this->__('Options is required')) ?>', function(v) {
            return !Validation.get('IsEmpty').test(v);
        }]]);
    <?php foreach ($this->getOptionValues() as $_value): ?>
    tooltipOption.add(<?php echo $_value->toJson() ?>);
    <?php endforeach; ?>
    //]]>
</script>